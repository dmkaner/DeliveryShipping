/*!
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*!
 * @module commonGrpc/serviceObject
 */
'use strict';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var extend = require("extend");
var common_1 = require("@google-cloud/common");
var promisify_1 = require("@google-cloud/promisify");
var GrpcServiceObject = /** @class */ (function (_super) {
    __extends(GrpcServiceObject, _super);
    /**
     * GrpcServiceObject is a base class, meant to be inherited from by a service
     * object that uses the gRPC protobuf API.
     *
     * @constructor
     * @alias module:common/grpc-service-object
     *
     * @private
     *
     * @param {object} config - Configuration object.
     */
    function GrpcServiceObject(config) {
        return _super.call(this, config) || this;
    }
    GrpcServiceObject.prototype.delete = function (callback) {
        // tslint:disable-next-line:no-any
        var protoOpts = this.methods.delete.protoOpts;
        var reqOpts = this.getOpts(this.methods.delete);
        this.request(protoOpts, reqOpts, callback || common_1.util.noop);
    };
    GrpcServiceObject.prototype.getMetadata = function (callback) {
        var _this = this;
        // tslint:disable-next-line:no-any
        var protoOpts = this.methods.getMetadata.protoOpts;
        var reqOpts = this.getOpts(this.methods.getMetadata);
        this.request(protoOpts, reqOpts, function (err, resp) {
            if (err) {
                callback(err, null, resp);
                return;
            }
            _this.metadata = resp;
            callback(null, _this.metadata, resp);
        });
    };
    GrpcServiceObject.prototype.setMetadata = function (metadata, callback) {
        // tslint:disable-next-line:no-any
        var protoOpts = this.methods.setMetadata.protoOpts;
        var reqOpts = extend(true, {}, this.getOpts(this.methods.setMetadata), metadata);
        this.request(protoOpts, reqOpts, callback || common_1.util.noop);
    };
    /**
     * Patch a request to the GrpcService object.
     *
     * @private
     */
    GrpcServiceObject.prototype.request = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return this.parent.request.apply(this.parent, args);
    };
    /**
     * Patch a streaming request to the GrpcService object.
     *
     * @private
     */
    GrpcServiceObject.prototype.requestStream = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return this.parent.requestStream.apply(this.parent, args);
    };
    /**
     * Patch a writable streaming request to the GrpcService object.
     *
     * @private
     */
    GrpcServiceObject.prototype.requestWritableStream = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        // tslint:disable-next-line:no-any
        return this.parent.requestWritableStream.apply(this.parent, args);
    };
    GrpcServiceObject.prototype.getOpts = function (metadata) {
        return typeof metadata === 'boolean' ? {} : metadata.reqOpts || {};
    };
    return GrpcServiceObject;
}(common_1.ServiceObject));
exports.GrpcServiceObject = GrpcServiceObject;
/*! Developer Documentation
 *
 * All async methods (except for streams) will return a Promise in the event
 * that a callback is omitted.
 */
promisify_1.promisifyAll(GrpcServiceObject);
//# sourceMappingURL=service-object.js.map